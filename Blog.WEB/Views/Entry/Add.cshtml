@model Blog.Model.Data.Entry

<form asp-controller="Entry" asp-action="Save" method="post">
    <div class="btn-group">
        <button class="btn btn-success" type="submit">Kaydet</button>
        <button class="btn btn-primary" type="reset">Temizle</button>
    </div>
    <br /><br />
    <label>Başlık : &nbsp;</label><input asp-for="Title" style="width:100%" />
    <br /><br />
    <label>Kategori : &nbsp;</label>
    <select asp-for="CategoryId">
        @{ 
            foreach(var items in (List<Blog.Model.Data.Category>)ViewBag.Categories)
            {
                <option value="@items.Id">@items.Title</option>

            }
        }

    </select>
    <p>
        <br />
        <textarea asp-for="Content"></textarea>
    </p>


</form>


@section scripts{
    <script>

        $(document).ready(function () {
            $("#BlogEditorTable").dataTable();

            tinymce.init({
                selector: 'textarea',
                height: 500,
                theme: 'modern',
                plugins: [
                    'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                    'searchreplace wordcount visualblocks visualchars code fullscreen',
                    'insertdatetime media nonbreaking save table contextmenu directionality',
                    'emoticons template paste textcolor colorpicker textpattern imagetools codesample toc'
                ],
                toolbar1: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
                toolbar2: 'print preview media | forecolor backcolor emoticons | codesample',
                image_advtab: true,
                image_title: true,
                file_picker_types: 'image',
                images_upload_handler: function (blobInfo, success, failure) {
                    var xhr, formData;

                    xhr = new XMLHttpRequest();
                    xhr.withCredentials = false;
                    xhr.open('POST', '/Home/TinyMceUpload');

                    xhr.onload = function () {
                        var json;

                        if (xhr.status < 200 || xhr.status >= 300) {
                            failure('HTTP Error: ' + xhr.status);
                            return;
                        }

                        json = JSON.parse(xhr.responseText);

                        if (!json || typeof json.location != 'string') {
                            failure('Invalid JSON: ' + xhr.responseText);
                            return;
                        }

                        success(json.location);
                    };

                    formData = new FormData();
                    formData.append('files', blobInfo.blob(), blobInfo.filename());

                    xhr.send(formData);
                },
                file_picker_callback: function (cb, value, meta) {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'file');
                    input.setAttribute('accept', 'image/*');

                    input.onchange = function () {
                        var file = this.files[0];
                       
                        var reader = new FileReader();
                        reader.readAsDataURL(file);
                        reader.onload = function () {
                            var id = 'blobid' + (new Date()).getTime();
                            var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                            var blobInfo = blobCache.create(id, file, reader.result);
                            blobCache.add(blobInfo, reader.result);
                            cb(blobInfo.blobUri(), { title: file.name });

                        };
                    };

                    input.click();
                }
            });

        })
    </script>
}